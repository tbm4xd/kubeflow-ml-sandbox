apiVersion: kubeflow.org/v1alpha1
kind: Notebook
metadata:
  labels:
    app: notebook
  name: ${application.name}
  namespace: ${application.namespace}
spec:
  template:
    spec:
      initContainers:
      - name: export-git-creds
        image: agilestacks/git-credentials
        command: ["/bin/sh", "-c"]
        args: [cp --verbose -pf /usr/local/bin/asi-* /tmp; true;]
        volumeMounts:
        - name: usr-local-bin
          mountPath: /tmp
      - name: git-sync
        image: k8s.gcr.io/git-sync:v3.1.2
        env:
        - name: GIT_SYNC_REPO
          valueFrom:
            secretKeyRef:
              name: ${component.git.secretName}
              key: clone_url
        - name: GIT_SYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: ${component.git.secretName}
              key: username
        - name: GIT_SYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${component.git.secretName}
              key: password
        args:
        - --branch=master
        - -rev=HEAD
        - --wait=30
        - -one-time
        - --root=/tmp/.git-sync
        - --dest=current
        volumeMounts:
        - name: workspace
          mountPath: /tmp
      - name: init-notebook
        image: ${application.jupyter.kernel.image}
        command: ["/bin/sh", "-xc"]
        workingDir: /home/jovyan
        args:
        - >
          cp --verbose -pf /usr/local/bin/* /binaries;
          mkdir -p ".git-sync/.git/bin";
          rm -f ".git-sync/.git/bin/credentials-helper";
          printf '#!/bin/bash\nasi-git-credentials-k8s -n ${application.namespace} -l ${application.name} $@' > .git-sync/.git/bin/credentials-helper;
          chmod +x .git-sync/.git/bin/credentials-helper;
          ln -s .git-sync/current workspace;
          git -C workspace config user.name  "${author.name}";
          git -C workspace config user.email "${author.email}";
          git -C workspace config credential.https://github.com.helper "/home/jovyan/.git-sync/.git/bin/credentials-helper";
          git -C workspace rev-parse refs/heads/master;
          git -C workspace rev-parse HEAD;
          git -C workspace checkout -b reattach;
          git -C workspace checkout -B master reattach;
          git -C workspace branch -d reattach;
          git -C workspace branch -u origin/${component.git.branch};
          chown -R ${application.workspace.uid}:${application.workspace.gid} workspace workspace/* workspace/ workspace/.[^.]*/;
          true;
        volumeMounts:
        - name: workspace
          mountPath: /home/jovyan
        - name: usr-local-bin
          mountPath: /binaries
      containers:
      - name: notebook
        image: ${application.jupyter.kernel.image}
        env:
        - name: NB_VARS
          value: ${application.name}-nb-vars
        - name: NB_SECRET_VARS
          value: ${application.name}-nb-keyring
        - name: AWS_DEFAULT_PROFILE
          value: "${cloud.credential.profile}"
        - name: AWS_PROFILE
          value: "${cloud.credential.profile}"
        - name: AWS_REGION
        resources:
          limits: {}
          requests:
            cpu: "0.5"
            memory: 1.0Gi
        volumeMounts:
        - mountPath: /home/jovyan
          name: workspace
        - mountPath: /home/jovyan/data
          name: data
        - mountPath: "/home/jovyan/.aws"
          name: aws
          readOnly: true
        - mountPath: "/usr/local/bin"
          name: usr-local-bin
      serviceAccountName: default-editor
      ttlSecondsAfterFinished: 300
      volumes:
      - name: workspace
        persistentVolumeClaim:
          claimName: ${application.name}-workspace
      - name: data
        persistentVolumeClaim:
          claimName: "${application.name}-${application.bucket.name}-data"
      - name: aws
        secret:
          secretName: "${application.name}-${application.bucket.name}-creds"
      - name: usr-local-bin
        emptyDir: {}
