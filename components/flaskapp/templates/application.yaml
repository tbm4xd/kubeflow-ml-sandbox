apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |-
      ---
      apiVersion: ambassador/v0
      kind: Mapping
      name: {{FLASK_APP}}
      prefix: /{{FLASK_APP}}/
      rewrite: /
      timeout_ms: 300000
      service: {{FLASK_APP}}-flask.{{NAMESPACE}}:80
      use_websocket: false
  name: "{{FLASK_APP}}-flask"
  labels:
    app: "{{FLASK_APP}}"
    tier: "frontend"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: "http-server"
  selector:
    app: "{{FLASK_APP}}"
    tier: "frontend"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{FLASK_APP}}-flask"
spec:
  selector:
    matchLabels:
      app: "{{FLASK_APP}}"
      tier: "frontend"
  replicas: {{FLASK_REPLICAS}}
  template:
    metadata:
      labels:
        app: "{{FLASK_APP}}"
        tier: "frontend"
    spec:
      containers:
      - name: "{{FLASK_APP}}"
        image: "{{FLASK_APP_IMAGE}}"
        imagePullPolicy: Always
        env:
        - name: SERVER_ADDR
          value: "{{SELDON_APISERVER_ADDR}}"
        - name: SAMPLE_DATA
          value: "{{DATASET_FILE}}"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: "{{KEYRING_SECRET}}"
              key: github_token
        - name: OAUTH_KEY
          value: "{{SELDON_OAUTH_KEY}}"
        - name: OAUTH_SECRET
          value: "{{SELDON_OAUTH_SECRET}}"
        volumeMounts:
        - mountPath: "{{MOUNT_PATH}}"
          name: "data-dir"
        ports:
        - name: http-server
          containerPort: 80
        # resources:
        #   limits:
        #     cpu: "1"
        #     memory: 4Gi
        #   requests:
        #     cpu: "1"
        #     memory: 1Gi
      volumes:
      - name: "data-dir"
        persistentVolumeClaim:
          claimName: "{{BUCKET_PVC}}"
